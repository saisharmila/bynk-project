{"version":3,"sources":["actions/actions.js","containers/countries.js","formValidator.js","containers/ssn.js","containers/email.js","containers/phoneNumber.js","App.js","serviceWorker.js","reducers/countriesReducer.js","reducers/formReducer.js","reducers/index.js","index.js"],"names":["fetchCountries","type","payload","axios","get","validateSSN","ssn","validateEmail","email","validatePhoneNumber","number","Countries","props","state","selectedCounty","localStorage","getItem","handleChange","bind","this","countries","map","country","data-icon","flag","key","name","value","e","setState","target","window","setItem","className","onChange","id","countriesMapper","React","Component","connect","dispatch","bindActionCreators","formValidator","element","valid","style","visibility","SwedishSSN","checkValidity","event","SSNForm","document","getElementById","isSSNValid","onBlur","for","formValidity","Email","isEmailValid","htmlFor","PhoneNumber","phone","validatePhone","phoneForm","isPhoneNumberValid","class","App","submitData","preventDefault","formHasError","alert","console","log","clear","onSubmit","Boolean","location","hostname","match","countriesReducer","action","data","formState","SSNReducer","test","emailReducer","toLowerCase","phoneReducer","formReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","promiseMiddleware","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88bf23c8.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport const fetchCountries = () =>{\r\n    const request = axios.get(\"https://restcountries.eu/rest/v2/all\")\r\n\r\n    return {\r\n        type : \"FETCH_COUNTRIES\",\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport const validateSSN = ssn => {\r\n\r\n    return{\r\n        type : \"VALIDATE_SSN\",\r\n        payload : ssn\r\n    }\r\n}\r\n\r\nexport const validateEmail = email => {\r\n    \r\n    return{\r\n        type : \"VALIDATE_EMAIL\",\r\n        payload : email\r\n    }\r\n}\r\n\r\nexport const validatePhoneNumber = number => {\r\n\r\n    return{\r\n        type : \"VALIDATE_PHONE\",\r\n        payload : number\r\n    }\r\n}","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {fetchCountries} from \"../actions/actions\"\r\n\r\nclass Countries extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedCounty : localStorage.getItem(\"country\") ? localStorage.getItem(\"country\") : \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchCountries()\r\n    }\r\n\r\n    countriesMapper(countries){\r\n        return countries.map(country => {\r\n            return <option data-icon={country.flag} key={country.name} value={country.name}>{country.name}</option>\r\n        })\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            selectedCounty : e.target.value\r\n        })\r\n        window.localStorage.setItem(\"country\", e.target.value)\r\n    }\r\n\r\n    render(){\r\n        if(this.props.countries){\r\n            return(\r\n                <div className=\"input-field col s12 m6\">\r\n                    <select value={this.state.selectedCounty} onChange={this.handleChange} id=\"countries\" className=\"icons\">\r\n                        {this.countriesMapper(this.props.countries)}\r\n                    </select>\r\n                </div>\r\n            )\r\n        }else return null\r\n        \r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({fetchCountries}, dispatch)\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        countries : state.countries\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries)","export const formValidator = (element, valid) => {\r\n    if(element){\r\n        if(valid === false){\r\n            element.style.visibility = \"visible\"\r\n        }else  element.style.visibility = \"hidden\"   \r\n    }\r\n}","import React from \"react\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {connect} from \"react-redux\"\r\nimport {validateSSN} from \"../actions/actions\"\r\nimport { formValidator } from \"../formValidator\"\r\n\r\nclass SwedishSSN extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            ssn : window.localStorage.getItem(\"ssn\") ? window.localStorage.getItem(\"ssn\") : \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.checkValidity = this.checkValidity.bind(this)\r\n\r\n    }\r\n\r\n    checkValidity(event){\r\n        this.props.validateSSN(event.target.value)\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            ssn : e.target.value\r\n        })\r\n        window.localStorage.setItem(\"ssn\", e.target.value)\r\n    }\r\n\r\n    render(){\r\n        const SSNForm = document.getElementById(\"helper-text-ssn\")\r\n        formValidator(SSNForm, this.props.isSSNValid)\r\n        return(\r\n        <div>\r\n            <div className=\"input-field col s6\">\r\n            <i className=\"material-icons prefix\">account_circle</i>\r\n            <input onChange={this.handleChange} value={this.state.ssn} id=\"ssn\" onBlur={this.checkValidity} type=\"text\" className=\"validate\" />\r\n            <label for=\"ssn\">Social security number</label>\r\n            <span  style={{visibility : \"hidden\"}} id=\"helper-text-ssn\" className=\"helper-text\">Invalid Swedish security number!</span>\r\n        </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({validateSSN}, dispatch)\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        isSSNValid : state.formValidity.isSSNValid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SwedishSSN)","import React from \"react\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {connect} from \"react-redux\"\r\nimport {validateEmail} from \"../actions/actions\"\r\nimport { formValidator } from \"../formValidator\"\r\n\r\nclass Email extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            email : localStorage.getItem(\"email\") ? localStorage.getItem(\"email\") : \"\"\r\n        }\r\n         this.handleChange = this.handleChange.bind(this)\r\n        this.validateEmail = this.validateEmail.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    validateEmail(event){\r\n        this.props.validateEmail(event.target.value)\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({email : null})\r\n        window.localStorage.setItem(\"email\", e.target.value)\r\n    }\r\n\r\n    render(){\r\n        const email = document.getElementById(\"helper-text-email\")\r\n        formValidator(email, this.props.isEmailValid)\r\n        return(\r\n        <div>\r\n            <div className=\"input-field col s6\">\r\n            <i className=\"material-icons prefix\">email</i>\r\n            <input value={this.state.email} onChange={this.handleChange} id=\"email\" type=\"email\" onBlur={this.validateEmail} />\r\n            <label htmlFor=\"email\">Email</label>\r\n            <span style={{visibility : \"hidden\"}} id=\"helper-text-email\" className=\"helper-text\"  >Invalid email!</span>\r\n        </div>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({validateEmail}, dispatch)\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        isEmailValid : state.formValidity.isEmailValid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Email)","import React from \"react\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {connect} from \"react-redux\"\r\nimport {validatePhoneNumber} from \"../actions/actions\"\r\nimport { formValidator } from \"../formValidator\"\r\n\r\nclass PhoneNumber extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            phone : window.localStorage.getItem(\"phone\") ? window.localStorage.getItem(\"phone\") : \"\"\r\n        } \r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.validatePhone = this.validatePhone.bind(this)\r\n    }\r\n\r\n    validatePhone(event){\r\n        this.props.validatePhoneNumber(event.target.value)   \r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({phone : e.target.value})\r\n        window.localStorage.setItem(\"phone\", e.target.value)\r\n    }\r\n\r\n    render(){\r\n        const phoneForm = document.getElementById(\"helper-text-phone\")\r\n        formValidator(phoneForm, this.props.isPhoneNumberValid)\r\n        return(\r\n            <div>\r\n                <div className=\"input-field col s6\">\r\n          <i className=\"material-icons prefix\">phone</i>\r\n          <input onChange={this.handleChange} value={this.state.phone} id=\"phone\" type=\"tel\" onBlur={this.validatePhone} class=\"validate\" />\r\n          <label htmlFor=\"phone\">Telephone</label>\r\n          <span style={{visibility : \" hidden\"}} id=\"helper-text-phone\" className=\"helper-text\">Invalid Swedish phone number!</span>\r\n        </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({validatePhoneNumber}, dispatch)\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        isPhoneNumberValid : state.formValidity.isPhoneNumberValid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneNumber)","import React from 'react';\nimport {connect} from \"react-redux\"\nimport './App.css';\nimport Countries from './containers/countries';\nimport SwedishSSN from './containers/ssn';\nimport Email from './containers/email';\nimport PhoneNumber from './containers/phoneNumber';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.submitData = this.submitData.bind(this)\n  }\n\n  submitData(e){\n    e.preventDefault()\n\n    if(this.props.formHasError){\n      alert(\"Form has errors, please check and resubmit\")\n      \n    }else {\n      console.log(\"Success\")\n      window.localStorage.clear()\n      alert(\"Form is looking good :)\")\n    }\n    \n  }\n\n  render(){\n    \n    return (\n      <div className=\"App\">\n        <form onSubmit={this.submitData}>\n        <Countries />\n        <SwedishSSN />\n        <Email />\n        <PhoneNumber />\n        <button className=\"waves-effect waves-light btn-small\" type=\"submit\">\n          Submit\n        </button>\n        </form>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state){\n  const {isSSNValid, isEmailValid, isPhoneNumberValid} = state.formValidity\n\n  return {\n    formHasError : !(isSSNValid && isEmailValid && isPhoneNumberValid)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const countriesReducer = (state=null, action) => {\r\n    switch(action.type){\r\n        case \"FETCH_COUNTRIES\" : return action.payload.data\r\n\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default countriesReducer","const formState = {\r\n    isSSNValid : null,\r\n    isEmailValid : null,\r\n    isPhoneNumberValid : null\r\n}\r\nconst SSNReducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"VALIDATE_SSN\" : \r\n            const validity =  /^(19|20)?(\\d{6}([-+]|\\s)\\d{4}|(?!19|20)\\d{10})$/.test(action.payload)\r\n\r\n            return validity\r\n        \r\n        default : return state\r\n    }\r\n   \r\n}\r\n\r\nconst emailReducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"VALIDATE_EMAIL\" : \r\n            // eslint-disable-next-line\r\n            const validity = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(action.payload.toLowerCase())\r\n\r\n            return validity\r\n        default : return state\r\n    }\r\n}\r\n\r\nconst phoneReducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"VALIDATE_PHONE\" : \r\n        \r\n        const validity = /^((((0{2}?)|(\\+){1})46)|0)7[\\d]{8}/.test(action.payload)\r\n\r\n            return validity\r\n\r\n        default : return state\r\n    }\r\n}\r\n\r\nconst formReducer = (state = formState, action) => {\r\n    return {\r\n        isSSNValid : SSNReducer(state.isSSNValid, action),\r\n        isEmailValid : emailReducer(state.isEmailValid, action),\r\n        isPhoneNumberValid : phoneReducer(state.isPhoneNumberValid, action)\r\n    }\r\n}\r\n\r\nexport default formReducer","import {combineReducers} from \"redux\"\r\n\r\nimport countriesReducer from \"./countriesReducer\"\r\nimport formReducer from \"./formReducer\"\r\n\r\nexport default combineReducers({\r\n    countries : countriesReducer,\r\n    formValidity : formReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport promiseMiddleware from 'redux-promise';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from \"./reducers/index\"\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer, applyMiddleware(promiseMiddleware))\n\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}